<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:a="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"> 

    <head>
        <meta charset="UTF-8" ></meta>
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"></meta>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
        <title>Add Room</title>
        <meta name="description" content="Blueprint: A basic template for a responsive multi-level menu" ></meta>
        <meta name="keywords" content="blueprint, template, html, css, menu, responsive, mobile-friendly" ></meta>
        <meta name="author" content="Codrops" ></meta>
        <link rel="shortcut icon" href="favicon.ico"></link>
        <!-- food icons -->
        <link rel="stylesheet" type="text/css" href="css/font-awesome.min.css" ></link>
        <link rel="stylesheet" type="text/css" href="css/organicfoodicons.css" ></link>
        <!-- demo styles -->
        <link rel="stylesheet" type="text/css" href="styles/bootstrap-4.1.2/bootstrap.min.css"/>
        <link rel="stylesheet" type="text/css" href="css/demo.css" ></link>
        <!-- menu styles -->
        <link rel="stylesheet" type="text/css" href="css/component.css" ></link>
        <script src="js/modernizr-custom.js"></script>
    </head>

    <body>
        <!-- Main container -->
        <div class="container">
            <!-- Blueprint header -->
            <header class="bp-header cf">
                <div class="dummy-logo">
                    <div class="dummy-icon foodicon foodicon--coconut"></div>
                    <h2 class="dummy-heading">KRHG</h2>
                </div>
                <div class="bp-header__main">
                    <h1 class="bp-header__title">Add Room</h1>
                    <nav class="bp-nav">
                        <a class="bp-nav__item bp-icon bp-icon--prev" href="MainPage.xhtml" data-info="Log out"><span>Log out</span></a>
                        <a class="bp-nav__item bp-icon bp-icon--next" href="index.xhtml" data-info="Home"><span>Home</span></a>

                    </nav>
                </div>
            </header>
            <button class="action action--open" aria-label="Open Menu"><span class="icon icon--menu"></span></button>
            <nav id="ml-menu" class="menu">
                <button class="action action--close" aria-label="Close Menu"><span class="icon icon--cross"></span></button>
                <div class="menu__wrap">



                </div>
            </nav>
            <div class="content" >
                <div class="form-container" >

                    <h:form>
                        <h2>Add Room</h2>
                        <div class="form-group">
                            <h:inputText class="form-control" value="#{hotelManagedBean.roomName}" id="roomName" a:placeholder="ROOM NAME" required="true"></h:inputText>
                        </div>
                        <div class="form-group">
                            <h:inputText class="form-control" value="#{hotelManagedBean.roomNumber}" id="roomNumber" a:placeholder="ROOM NUMBER" required="true"></h:inputText>
                        </div>
                        <div class="form-group">
                            <h6>Pax Qty: </h6>
                            <h:selectOneMenu value="#{hotelManagedBean.roomPax}">
                                <f:selectItem itemValue="1" itemLabel="1" />
                                <f:selectItem itemValue="2" itemLabel="2" />
                                <f:selectItem itemValue="3" itemLabel="3" />
                                <f:selectItem itemValue="4" itemLabel="4" />
                                <f:selectItem itemValue="5" itemLabel="5" />
                                <f:selectItem itemValue="6" itemLabel="6" />
                                <f:selectItem itemValue="7" itemLabel="7" />
                                <f:selectItem itemValue="8" itemLabel="8" />
                                <f:selectItem itemValue="9" itemLabel="9" />
                                <f:selectItem itemValue="10" itemLabel="10" />
                            </h:selectOneMenu><br/>
                        </div>
                        <div class="form-group">
                            <h6>Room Type: </h6>
                            <h:selectOneMenu value="#{hotelManagedBean.roomType}">
                                <f:selectItem itemValue="Standard" itemLabel="Standard" />
                                <f:selectItem itemValue="Deluxe" itemLabel="Deluxe" />
                                <f:selectItem itemValue="Premium" itemLabel="Premium" />
                                <f:selectItem itemValue="Suite" itemLabel="Suite" />
                                <f:selectItem itemValue="Penthouse" itemLabel="Penthouse" />
                            </h:selectOneMenu><br/>
                        </div>

                        <h:selectManyCheckbox value = "#{hotelManagedBean.roomFacilities}"> 
                            <c:forEach items="${hotelManagedBean.roomFacilityList}" var="r">
                                <f:selectItem itemValue = "#{r.roomFacilityName}" itemLabel = "#{r.roomFacilityName}" /> 
                            </c:forEach>
                        </h:selectManyCheckbox>


                        <h:selectManyCheckbox value = "#{hotelManagedBean.minibarItems}"> 
                            <c:forEach items="${hotelManagedBean.minibarItemList}" var="m">
                                <f:selectItem itemValue = "#{m.itemName}" itemLabel = "#{m.itemName}" /> 
                            </c:forEach>
                        </h:selectManyCheckbox>
                        <h:commandButton class="btn" value="Add Room" action="#{hotelManagedBean.addRoom()}"></h:commandButton>


                    </h:form>

                </div>
            </div>
        </div>
        <!-- /view -->
        <script src="js/classie.js"></script>
        <script src="js/dummydata.js"></script>
        <script src="js/main.js"></script>
        <script>
            (function () {
                var menuEl = document.getElementById('ml-menu'),
                        mlmenu = new MLMenu(menuEl, {
                            // breadcrumbsCtrl : true, // show breadcrumbs
                            // initialBreadcrumb : 'all', // initial breadcrumb text
                            backCtrl: false, // show back button
                            // itemsDelayInterval : 60, // delay between each menu item sliding animation
                            onItemClick: loadDummyData // callback: item that doesnÂ´t have a submenu gets clicked - onItemClick([event], [inner HTML of the clicked item])
                        });

                // mobile menu toggle
                var openMenuCtrl = document.querySelector('.action--open'),
                        closeMenuCtrl = document.querySelector('.action--close');

                openMenuCtrl.addEventListener('click', openMenu);
                closeMenuCtrl.addEventListener('click', closeMenu);

                function openMenu() {
                    classie.add(menuEl, 'menu--open');
                    closeMenuCtrl.focus();
                }

                function closeMenu() {
                    classie.remove(menuEl, 'menu--open');
                    openMenuCtrl.focus();
                }

                // simulate grid content loading
                var gridWrapper = document.querySelector('.content');

                function loadDummyData(ev, itemName) {
                    ev.preventDefault();

                    closeMenu();
                    gridWrapper.innerHTML = '';
                    classie.add(gridWrapper, 'content--loading');
                    setTimeout(function () {
                        classie.remove(gridWrapper, 'content--loading');
                        gridWrapper.innerHTML = '<ul class="products">' + dummyData[itemName] + '</ul>';
                    }, 700);
                }
                function goto(link) {
                    window.location.replace(link);
                }
            })();
            function goto(link) {
                window.location.replace(link);
            }
        </script>
    </body>

</html>
